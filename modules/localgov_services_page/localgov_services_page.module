<?php

/**
 * Implements hook_form_alter().
 */
function localgov_services_page_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // The following content types will be ajaxified if they contain both field_service and field_sub_hub.
  $content_types = [
    'document_landing_page',
    'guide_overview',
    'localgov_services_page',
    'html_page'
  ];

  _localgov_services_page_ajaxify($content_types, $form, $form_state);
}

function _localgov_services_page_ajaxify($content_types, &$form, \Drupal\Core\Form\FormStateInterface $formState) {
  $form_ids  = [];
  foreach ($content_types as $content_type) {
    $form_ids[] = 'form_node_' . $content_type . '_form';
    $form_ids[] = 'form_node_' . $content_type . '_edit_form';
  }

  // Add our custom AJAX callback.
  $form['field_service']['widget']['#ajax'] = [
    'callback' => '_localgov_services_page_form_node_services_page_field_service_callback'
  ];

  // Prepare field_sub_hub.
  $form['field_sub_hub']['#attributes']['id'] = 'sub_hub_field_wrapper';

  // Set the default values for field_sub_hub based on the value for
  // field_service_hub. If there is no value for field_service_hub, we pass it
  // to the function with no parameter which will give us the default values for
  // the field.
  if (isset($form['field_service']['widget']['#default_value'][0])) {
    $form['field_sub_hub']['widget']['#options'] = _field_sub_hub_valid_options($form['field_service']['widget']['#default_value'][0]);
  }
  else {
    $form['field_sub_hub']['widget']['#options'] = _field_sub_hub_valid_options(NULL);
  }
}

/**
 * Ajax callback to populate field_sub_hub with the only relevant values.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *
 * @throws
 * @return \Drupal\Core\Ajax\AjaxResponse
 */
function _localgov_services_page_form_node_services_page_field_service_callback($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  // Update the list with valid nodes to the field.
  $form['field_sub_hub']['widget']['#options'] = _field_sub_hub_valid_options($form_state->getValue('field_service')[0]['target_id']);

  // Update the field in the UI.
  $renderer = \Drupal::service('renderer');
  $response = new \Drupal\Core\Ajax\AjaxResponse();
  $response->addCommand(new \Drupal\Core\Ajax\ReplaceCommand('#sub_hub_field_wrapper', $renderer->render($form['field_sub_hub'])));
  return $response;
}

/**
 * Provides valid options for the field_sub_hub field.
 *
 * @param $service_id
 *
 * @return array
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 */
function _field_sub_hub_valid_options($service_id) {
  /** @var \Drupal\localgov_services_sublanding\LazyLoader $loader */
  $loader = \Drupal::service('localgov_services_sublanding.lazy_loader');

  // Build default values.
  $options = ['_none' => '- None -'];

  // Handle an empty service.
  if (is_null($service_id)) {
    foreach ($loader->loadAll() as $node) {
      $options[$node->id()] = $node->label();
    }
  }
  else {
    // Build an array of pages that have the selected service.
    foreach ($loader->loadAllWithService($service_id) as $node) {
      $options[$node->id()] = $node->label();
    }
  }

  return $options;
}
